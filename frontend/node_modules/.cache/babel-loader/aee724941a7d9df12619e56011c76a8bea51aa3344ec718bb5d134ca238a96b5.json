{"ast":null,"code":"// frontend/src/redux/slices/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  userInfo: null,\n  loading: false,\n  error: null\n};\nexport const register = createAsyncThunk('auth/register', async (userData, thunkAPI) => {\n  try {\n    const response = await axios.post('/api/users/register', userData);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const login = createAsyncThunk('auth/login', async (userData, thunkAPI) => {\n  try {\n    const response = await axios.post('/api/users/login', userData);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.userInfo = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userInfo = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userInfo = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","userInfo","loading","error","register","userData","thunkAPI","response","post","data","rejectWithValue","login","authSlice","name","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["G:/task-list-application/frontend/src/redux/slices/authSlice.js"],"sourcesContent":["// frontend/src/redux/slices/authSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  userInfo: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const register = createAsyncThunk('auth/register', async (userData, thunkAPI) => {\r\n  try {\r\n    const response = await axios.post('/api/users/register', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const login = createAsyncThunk('auth/login', async (userData, thunkAPI) => {\r\n  try {\r\n    const response = await axios.post('/api/users/login', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(register.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userInfo = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userInfo = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGN,gBAAgB,CAAC,eAAe,EAAE,OAAOO,QAAQ,EAAEC,QAAQ,KAAK;EACtF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,qBAAqB,EAAEH,QAAQ,CAAC;IAClE,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,OAAOG,QAAQ,CAACI,eAAe,CAACP,KAAK,CAACI,QAAQ,CAACE,IAAI,CAAC;EACtD;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,KAAK,GAAGb,gBAAgB,CAAC,YAAY,EAAE,OAAOO,QAAQ,EAAEC,QAAQ,KAAK;EAChF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,kBAAkB,EAAEH,QAAQ,CAAC;IAC/D,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,OAAOG,QAAQ,CAACI,eAAe,CAACP,KAAK,CAACI,QAAQ,CAACE,IAAI,CAAC;EACtD;AACF,CAAC,CAAC;AAEF,MAAMG,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,MAAM;EACZb,YAAY;EACZc,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACf,QAAQ,GAAG,IAAI;IACvB;EACF,CAAC;EACDgB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,QAAQ,CAACgB,OAAO,EAAGJ,KAAK,IAAK;MACpCA,KAAK,CAACd,OAAO,GAAG,IAAI;MACpBc,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDgB,OAAO,CAACf,QAAQ,CAACiB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACf,QAAQ,GAAGqB,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDJ,OAAO,CAACf,QAAQ,CAACoB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC7CN,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACb,KAAK,GAAGmB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDJ,OAAO,CAACR,KAAK,CAACS,OAAO,EAAGJ,KAAK,IAAK;MACjCA,KAAK,CAACd,OAAO,GAAG,IAAI;MACpBc,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDgB,OAAO,CAACR,KAAK,CAACU,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC3CN,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACf,QAAQ,GAAGqB,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDJ,OAAO,CAACR,KAAK,CAACa,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC1CN,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACb,KAAK,GAAGmB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAO,CAAC,GAAGH,SAAS,CAACa,OAAO;AAC3C,eAAeb,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}