{"ast":null,"code":"var _jsxFileName = \"G:\\\\task-list-application\\\\frontend\\\\src\\\\components\\\\Task\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Task/TaskList.js\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTasks } from '../../redux/slices/taskSlice';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    tasks,\n    loading,\n    error\n  } = useSelector(state => state.tasks);\n  useEffect(() => {\n    dispatch(getTasks());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task\n    }, task._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"+lAsznxMgvQHhEEMwWM16tZe3no=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getTasks","TaskItem","jsxDEV","_jsxDEV","TaskList","_s","dispatch","tasks","loading","error","state","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","_id","_c","$RefreshReg$"],"sources":["G:/task-list-application/frontend/src/components/Task/TaskList.js"],"sourcesContent":["// frontend/src/components/Task/TaskList.js\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTasks } from '../../redux/slices/taskSlice';\r\nimport TaskItem from './TaskItem';\r\n\r\nconst TaskList = () => {\r\n  const dispatch = useDispatch();\r\n  const { tasks, loading, error } = useSelector((state) => state.tasks);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTasks());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>My Tasks</h2>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>{error}</p>}\r\n      {tasks.map((task) => (\r\n        <TaskItem key={task._id} task={task} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACH,KAAK,CAAC;EAErEV,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACN,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBP,OAAO,iBAAIL,OAAA;MAAAQ,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5BN,KAAK,iBAAIN,OAAA;MAAAQ,QAAA,EAAIF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBR,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACdd,OAAA,CAACF,QAAQ;MAAgBgB,IAAI,EAAEA;IAAK,GAArBA,IAAI,CAACC,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACV,EAAA,CAlBID,QAAQ;EAAA,QACKN,WAAW,EACMC,WAAW;AAAA;AAAAoB,EAAA,GAFzCf,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}