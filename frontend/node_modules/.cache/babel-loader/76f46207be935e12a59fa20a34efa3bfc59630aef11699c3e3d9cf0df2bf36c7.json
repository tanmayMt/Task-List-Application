{"ast":null,"code":"var _jsxFileName = \"G:\\\\task-list-application\\\\frontend\\\\src\\\\App.js\";\n// frontend/src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport TaskList from './components/Task/TaskList';\nimport TaskForm from './components/Task/TaskForm';\nimport SharedTaskList from './components/SharedTasks/SharedTaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            component: Register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/tasks\",\n            component: TaskList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/new-task\",\n            component: TaskForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/shared-tasks\",\n            component: SharedTaskList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Switch","Provider","store","Login","Register","TaskList","TaskForm","SharedTaskList","jsxDEV","_jsxDEV","App","children","className","Routes","path","component","fileName","_jsxFileName","lineNumber","columnNumber","exact","_c","$RefreshReg$"],"sources":["G:/task-list-application/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport TaskList from './components/Task/TaskList';\nimport TaskForm from './components/Task/TaskForm';\nimport SharedTaskList from './components/SharedTasks/SharedTaskList';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Routes>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/tasks\" component={TaskList} />\n            <Route path=\"/new-task\" component={TaskForm} />\n            <Route path=\"/shared-tasks\" component={SharedTaskList} />\n            <Route path=\"/\" exact component={Login} />\n          </Routes>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,cAAc,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA,CAACR,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAS,QAAA,eACrBF,OAAA,CAACX,MAAM;MAAAa,QAAA,eACLF,OAAA;QAAKG,SAAS,EAAC,KAAK;QAAAD,QAAA,eAClBF,OAAA,CAACI,MAAM;UAAAF,QAAA,gBACLF,OAAA,CAACV,KAAK;YAACe,IAAI,EAAC,QAAQ;YAACC,SAAS,EAAEZ;UAAM;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzCV,OAAA,CAACV,KAAK;YAACe,IAAI,EAAC,WAAW;YAACC,SAAS,EAAEX;UAAS;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/CV,OAAA,CAACV,KAAK;YAACe,IAAI,EAAC,QAAQ;YAACC,SAAS,EAAEV;UAAS;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC5CV,OAAA,CAACV,KAAK;YAACe,IAAI,EAAC,WAAW;YAACC,SAAS,EAAET;UAAS;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/CV,OAAA,CAACV,KAAK;YAACe,IAAI,EAAC,eAAe;YAACC,SAAS,EAAER;UAAe;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzDV,OAAA,CAACV,KAAK;YAACe,IAAI,EAAC,GAAG;YAACM,KAAK;YAACL,SAAS,EAAEZ;UAAM;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf,CAAC;AAACE,EAAA,GAjBIX,GAAG;AAmBT,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}